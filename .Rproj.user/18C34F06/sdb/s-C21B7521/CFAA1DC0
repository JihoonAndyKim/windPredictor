{
    "collab_server" : "",
    "contents" : "\nrm(list=ls())\nlibrary(ncdf4)\nlibrary(abind)\n\noptions(scipen=999)\n\n#Format the observations\nformatDate <- function(obs) {\n  #Time conversion\n  obs$Date <- as.POSIXct(strptime(paste(obs$Date, obs$Hour, sep = \" \"), tz =\"America/Denver\", \"%m/%d/%Y %H\"))\n  obs$Date <- format(obs$Date, tz=\"UTC\", usetz = FALSE)\n  obs$Date <- gsub(\"-| |:|[^0-9]\", \"\", obs$Date)\n  obs$Date <- substr(obs$Date, 1, nchar(obs$Date) - 4)\n  \n  obs <- obs[as.numeric(obs$Date) %% 100 == 0,]\n  obs$Wind.Speed <- as.numeric(as.character(obs$Wind.Speed))\n  return(obs)\n}\n\nu <- nc_open(\"u80mOneThree.nc\")\nv <- nc_open(\"v80mOneThree.nc\")\n\nu_time <- ncvar_get(u,\"intTime\")\nu_valid <- ncvar_get(u, \"intValidTime\")\nu_data <- ncvar_get(u,\"U-component_of_wind_height_above_ground_80m\")\nv_time <- ncvar_get(v,\"intTime\")\nv_valid <- ncvar_get(v, \"intValidTime\")\nv_data <- ncvar_get(v,\"V-component_of_wind_height_above_ground_80m\")\n\n#Get the absolute wind speed\nabsoluteWind <- sqrt(u_data^2 + v_data^2)\ndirectionWind <- atan2(u_data, v_data)*180/pi\nabsoluteWind <- abind(aperm(absoluteWind, c(1,3,2)), v_valid)\ndirectionWind <- abind(aperm(directionWind, c(1,3,2)), v_valid)\n\n#Get the observed windspeeds\nobs <- formatDate(read.csv(\"WindData.csv\"))\n\n#find just the 24 hour, 48 hour, and 72 hour forecasts\ntestWind <- absoluteWind[c(1,9,17),,]\ntestDirWind <- directionWind[c(1,9,17),,]\n\n#binding an empty array to put the obs in\nemptyBind = array(rep(0, 3 * 7232 * 2, 1), dim=c(3, 7232, 2))\ntestWind <- abind(testWind, emptyBind)\ntestDirWind <- abind(testDirWind, emptyBind)\n\n#Replace all the time stamps with the appropriate observations and push the timestamps back one cell\nfor(i in seq(length(testWind[1,,12])))\n{\n  for(j in 1:3) {\n    if(length(which(obs$Date == testWind[j,i,12])) != 0) {\n      temp <- testWind[j, i, 12]\n      testWind[j,i,12] <- obs[which(obs$Date == testWind[j,i,12]), 3]\n      testWind[j,i,13] <- temp\n    }\n    else {\n      temp <- testWind[j, i, 12]\n      testWind[j,i,12] <- NA\n      testWind[j,i,13] <- temp\n    }\n  }\n}\n\nfor(i in seq(length(testDirWind[1,,12])))\n{\n  for(j in 1:3) {\n    if(length(which(obs$Date == testDirWind[j,i,12])) != 0) {\n      temp <- testDirWind[j,i,12]\n      testDirWind[j,i,12] <- obs[which(obs$Date == testDirWind[j,i,12]), 3]\n      testDirWind[j,i,13] <- temp\n    }\n    else {\n      temp <- testDirWind[j,i,12]\n      testDirWind[j,i,12] <- NA\n      testDirWind[j,i,13] <- temp\n    }\n  }\n}\n\n#Put in seasons in the data\nfor(fore in 1:3) {\n  for(days in 1:7232) {\n    #extract month\n    \n    mon <- as.numeric(testWind[fore, days, 13]) %/% 10000 %% 100\n    if(mon >= 12 || mon <= 2) {\n      testWind[fore, days, 14] <- \"WINTER\"\n    }\n    else if(mon >= 3 && mon <= 5){\n      testWind[fore, days, 14] <- \"SPRING\"\n    }\n    else if(mon >= 6 && mon <= 8) {\n      testWind[fore, days, 14] <- \"SUMMER\"\n    }\n    else{\n      testWind[fore, days, 14] <- \"FALL\"\n    }\n  }\n}\n\nfor(fore in 1:3) {\n  for(days in 1:7232) {\n    #extract month\n    mon <- as.numeric(testDirWind[fore, days, 13]) %/% 10000 %% 100\n    if(mon >= 12 || mon <= 2) {\n      testDirWind[fore, days, 14] <- \"WINTER\"\n    }\n    else if(mon >= 3 && mon <= 5){\n      testDirWind[fore, days, 14] <- \"SPRING\"\n    }\n    else if(mon >= 6 && mon <= 8) {\n      testDirWind[fore, days, 14] <- \"SUMMER\"\n    }\n    else{\n      testDirWind[fore, days, 14] <- \"FALL\"\n    }\n  }\n}\n\n#Format it so that the gefs.R can read it\ntestWind <- aperm(testWind, c(2,3,1))\ntestDirWind <- aperm(testDirWind, c(2,3,1))\n\n#Make all the values in our dataset numeric\nfor(i in 1:7232) {\n  for(j in 1:13) {\n    for(k in 1:3) {\n      testWind[i,j,k] <- as.numeric(testWind[i,j,k])\n      testDirWind[i,j,k] <- as.numeric(testDirWind[i,j,k])\n    }\n  }\n}\n\nsave(testWind, file = \"GEFS_NREL_Wind_Data.RData\")\nsave(testDirWind, file = \"GEFS_NREL_Wind_Dir_Data.RData\")\nnc_close(v)\nrm(u)\nrm(v)\n\n#is(mydata)\n#dim(mydata)\n\n\n\n",
    "created" : 1487315006671.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2282980092",
    "id" : "CFAA1DC0",
    "lastKnownWriteTime" : 1487315008,
    "last_content_update" : 1487315008994,
    "path" : "~/CUStuff/Senior Year/Research/NewCode/load.R",
    "project_path" : "load.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}