{
    "collab_server" : "",
    "contents" : "library(ncdf4)\nlibrary(abind)\n\noptions(scipen=999)\n\n#Format the observations\nformatDate <- function(obs) {\n  obs <- obs[obs$Hour == 0,]\n  obs$Date <- gsub(\"-\", \"\", paste(as.Date(obs$Date, \"%m/%d/%Y\"), \"00\", sep= \"\"))\n  obs$Wind.Speed <- as.numeric(as.character(obs$Wind.Speed))\n  return(obs)\n}\n\nu <- nc_open(\"u80mOneThree.nc\")\nv <- nc_open(\"v80mOneThree.nc\")\n\nu_time <- ncvar_get(u,\"intTime\")\nu_valid <- ncvar_get(u, \"intValidTime\")\nu_data <- ncvar_get(u,\"U-component_of_wind_height_above_ground_80m\")\nv_time <- ncvar_get(v,\"intTime\")\nv_valid <- ncvar_get(v, \"intValidTime\")\nv_data <- ncvar_get(v,\"V-component_of_wind_height_above_ground_80m\")\n\n#Get the absolute wind speed\nabsoluteWind <- sqrt(u_data^2 + v_data^2)\nabsoluteWind <- abind(aperm(absoluteWind, c(1,3,2)), v_valid)\n\n#Get the observed windspeeds\nobs <- formatDate(read.csv(\"WindData.csv\"))\n\n#find just the 24 hour, 48 hour, and 72 hour forecasts\ntestWind <- absoluteWind[c(1,9,17),,]\ndiff <- setdiff(obs$Date, testWind[1,,12])\n\n#Replace all the time stamps with the appropriate observations\nfor(i in seq(length(testWind[1,,12])))\n{\n  for(j in 1:3) {\n    if(length(which(obs$Date == testWind[j,i,12])) != 0) {\n      testWind[j,i,12] <- obs[which(obs$Date == testWind[j,i,12]), 3]\n    }\n    else {\n      testWind[j,i,12] <- NA\n    }\n  }\n}\n\n#Format it so that the gefs.R can read it\ntestWind <- aperm(testWind, c(2,3,1))\n\nnc_close(v)\nrm(u)\nrm(v)\n\n#is(mydata)\n#dim(mydata)\n#Fix the time stamps\n#Check the forecasts",
    "created" : 1470928593469.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3337737475",
    "id" : "67145BB5",
    "lastKnownWriteTime" : 1471027052,
    "last_content_update" : 1471027051655,
    "path" : "D:/Research/Code/load.R",
    "project_path" : "load.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}